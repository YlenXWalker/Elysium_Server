/**************************************************************************\
*                                                                          *
*   Copyright (C) ?-2020 <Unknown>                                         *
*   Copyright (C) 2013-2023 Neo-Mind                                       *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : -, Neo-Mind                                            *
*   Created Date  : 2020-11-18                                             *
*   Last Modified : 2023-08-26                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Extract all strings ending in .txt to an output file
///
ExtractTxtNames = function(_)
{
	$$(_, 1.1, `Need a valid Exe loaded`)
	if (Exe.FileSize == 0)
		throw NO_EXE;

	$$(_, 1.2, `Open output file for writing (Need ASCII encoding)`)
	const fileName = Exe.GetUserInput("$$txtNames", D_OutFile, "Target File", "Enter the target file path", OUTDIR + "loaded_Txt_files_" + ROC.BaseName + ".txt");
	if (fileName === false)
		return true;

	let fp = new TextFile(fileName, ASCII, 'w');
	if (!fp.Valid)
		throw NO_OUTPUT;

	$$(_, 2.1, `First write the essentials to file`)
	fp.WriteLine("Extracted with WARP")
	fp.WriteLine("===================")
	fp.WriteLine("Client: " + Exe.FilePath);
	fp.WriteLine("BuildDate: " + Exe.BuildDate);
	fp.WriteLine('');
	fp.WriteLine("Txt Files:");

	$$(_, 2.2, `Find all locations of .txt`)
	const addrs = Exe.FindTextN(".txt", CASE_INSENSITIVE, PHYSICAL, false);
	for (const addr of addrs)
	{
		$$(_, 2.3, `Retrieve the starting position of each string (right after either a NULL or an @)`)
		let startAddr = Exe.FindLastHex('00', addr, addr - 0x200); //cant be 512 bytes long...i hope
		const atAddr = Exe.FindLastHex('40', addr, startAddr > 0 ? startAddr : addr - 0x200);

		if (atAddr > 0)
			startAddr = atAddr;

		$$(_, 2.4, `Extract & write the string to file`)
		if (startAddr > 0 && startAddr !== (addr - 1))
			fp.WriteLine(" => " + Exe.GetText(startAddr + 1, addr - startAddr + 3));
	}

	$$(_, 2.5, `Close the file`)
	fp.Close();

	$$(_, 3, `Show the success message or display the file if requested`)
	if (!Warp.TestMode && UserChoice("Show File", "Display the generated file?"))
	{
		Warp.Show(fp.Path);
		return true;
	}
	else
	{
		return "Txt filenames have been extracted";
	}
};
