/**************************************************************************\
*                                                                          *
*   Copyright (C) ?-2024 Ai4rei/AN                                         *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Ai4rei/AN                                              *
*   Created Date  : 2020-11-11                                             *
*   Last Modified : 2024-08-08                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Change the conditional jumps to JMP after Hourly comparisons inside CRenderer::DrawAgeRate & PlayTime functions
///
NoHourly = function(_)
{
	$$(_, 1.1, `Find the comparison for Game Grade`)
	const src = [ROC.StkReg, WC]; // [ebp - disp8A] OR [esp + disp8A] ; LOCAL.x

	const reg = Exe.Version === 6 ? EAX //for VC6
	: Exe.BuildDate <= 20171018   ? AX
	:                               CX
	;
	
	let code =
		JNE(WCp)        //jne short _skip#1
	+	MOV(reg, src)  	//mov reg, dword ptr [LOCAL.x]
	+	TEST(reg, reg)	//test reg, reg
	+   JNE(WCp)		//jne short _skip#2
	;

	const addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("GameGrade comparison not found");

	$$(_, 1.2, `Change conditional jump`)
	Exe.SetJMP(addr);

	$$(_, 2.1, `Find all locations with the PlayTime division`)
	code =
		MOV(EAX, 0x95217CB1)    //mov eax, 95217CB1h
	+   MUL(ECX)                //mul ecx
	;

	let addrs = Exe.FindHexN(code);
	if (addrs.isEmpty())
	{
		code = code.replace(MUL(ECX), SUB(ECX, [POS4WC]) + MUL(ECX)); //put 'sub ecx, dword ptr [addr#1]' before the 'mul ecx'
		addrs = Exe.FindHexN(code);
	}

	if (addrs.isEmpty())
		throw Error("PlayTime division not found");

	const found = addrs.filter( (memAddr, idx) =>
	{
		const __ = `${_} [${idx}]`;

		$$(__, 2.2, `Find the JLE after the division (part of PlayTime Reminder comparison)`)
		const addr = Exe.FindHex( JLE(POS2WC), memAddr + 7, memAddr + 40);//jle _proceed

		$$(__, 2.3, `Change the conditional jumps`)
		if (addr > 0)
		{
			Exe.SetJMP(addr);
			return true;
		}
		else
			return false;
	});
	$$(_, 2.4, `Ensure atleast one was found and changed`)
	if (found.isEmpty())
		throw Error("No conditional Jumps found");

	return true;
};
