/**************************************************************************\
*                                                                          *
*   Copyright (C) 2018-2024 Andrei Karas (4144)                            *
*                                                                          *
*   This file is a part of WARP project                                    *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Andrei (4144)                                          *
*   Created Date  : 2022-09-24                                             *
*   Last Modified : 2024-08-08                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief NOP out the jump inside UIWindowMgr::handleShortcuts for 2019-03-20+ clients
///
AllowShortcutsInWine = function(_)
{
	$$(_, 1, `Look for the handleShortcuts function`)
	const val = ROC.FullVer == 14.29 ? WCp : POS2WC;
    let prefix =
		XORPS(XMM0, XMM0)           //xorps xmm0, xmm0
	+	MOVLPD([EBP, WCn], XMM0)    //movlpd qword ptr [ebp+var_8], xmm0
	+	MOV(R32, [EBP, WCn])        //mov regA, dword ptr [ebp+var_8]
	+	TEST(R32, R32)              //test regA, regA
	;
	let suffix =
		JG(POS2WC)                  //jg _skip
	+	CMP([ESI, POS3WC], 0)       //cmp dword ptr [esi + <dispA>], 0 ; dispA is 34F0h for some clients
	+	JNZ(POS2WC)                 //jnz _skip
	+	CMP(EDI, val)               //cmp edi, <const> ; const is 0DBh for some clients
	+	JA(val)                     //ja _skip
	;

	let addr = Exe.FindHex(prefix + suffix);
	if (addr < 0)
	{
		prefix =
			CMP(BYTE_PTR, [R32, 1], 0) //cmp byte ptr [regA + 1], 0
		+	JE(POS2WC)                 //je _skip
		+	PUSH(5)                    //push 5
		+	MOV(ECX, POS4WC)           //mov ecx, offset#1
		+	CALL(ALLWC)                //call func#1
		+	TEST(EAX, EAX)             //test eax, eax
		;
		suffix =
			JG(POS2WC)                 //jg _skip
		+	CMP([R32, POS2WC],0)       //cmp dword ptr [addrA], 0
		+	JNE(POS2WC)                //jne _skip
		+	CMP(R32, WCp)              //cmp edi, constA
		+	JA(WCp)                    //ja short _skip
		;
		addr = Exe.FindHex(prefix + suffix);
	}
	if (addr < 0)
		throw Error("function missing");

	$$(_, 2, `NOP out the JG`)
	Exe.SetNOPs(addr + prefix.byteCount(), 6);

    return true;
}

///
/// \brief Disable for older clients
///
AllowShortcutsInWine.validate = () =>
	(ROC.IsRenewal && Exe.BuildDate > 20190306) || Exe.BuildDate >= 20190401;
