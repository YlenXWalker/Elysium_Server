/**************************************************************************\
*                                                                          *
*   Copyright (C) 2013-2024 Neo-Mind                                       *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Neo-Mind                                               *
*   Created Date  : 2020-11-11                                             *
*   Last Modified : 2024-08-08                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief NOPs out the conditional jump after Langtype comparison when loading Palette prefixes
///        The prefixes are loaded into Palette Table in CSession::InitJobTable
///
OfficialPal = function(_)
{
	$$(_, 1.1, `Ensure the custom job patch is not selected (unless test mode is ON)`)
	if (!Warp.TestMode)
		Warp.SetPatchState("CustomJobs", false);

	$$(_, 1.2, `Find the prefix string 'Å©·ç'`)
	///       (Palette prefix for Knight - Same string is used for job path as well as imf)
	///
	const knightAddr = Exe.FindText("\xC5\xA9\xB7\xE7");
	if (knightAddr < 0)
		throw Error("Palette prefix not found");

	$$(_, 1.3, `Find all locations where it is assigned`)
	const code = Exe.Version === 6 //VC6
	?
		MOV([EAX], knightAddr) + CALL() //mov dword ptr [eax], <knightAddr>
		                                //call func#1
	:
		MOV([R32, 0x38], knightAddr)    //mov dword ptr [regA + 38h], <knightAddr>
	;
	const addrs = Exe.FindHexN(code);

	$$(_, 2.1, `Find the conditional jump (JNE) before one of the assignments - only 1 will have it`)
	const jneAddr = addrs.findAs( addr =>
	{
		const found = Exe.FindHex(JNE(POS2WC), addr - 0x20, addr);
		if (found > 0)
			return found;
	});
	if (!jneAddr)
		throw Error("Prefix reference not found");

	$$(_, 2.2, `NOP out the conditional jump`)
	Exe.SetNOPs(jneAddr, 6);

	return true;
};
