/**************************************************************************\
*                                                                          *
*   Copyright (C) 2018-2024 Andrei Karas (4144)                            *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Andrei (4144)                                          *
*   Created Date  : 2021-03-06                                             *
*   Last Modified : 2024-08-09                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Hide date based on zero values (1969-01-01) in guilds member window
///
HideZeroDateInGuildWin = function(_)
{
	$$(_, 1.1, `Find the location where the "Msg strings" are fetched in UIGuildMemberManageWnd_virt68`)
	const parts =
	[
		CALL([POS3WC])           //call dword ptr [&MSVCR#._localtime32]

	,//1
		ADD(ESP, 4)              //add esp, 4
	+	PUSH_EAX                 //push eax
	+	PUSH(0xBC3)              //push 0BC3h

	,//2
		CALL(ALLWC)              //call MsgStr

	,//3
		ADD(ESP, 4)              //add esp, 4
	+	PUSH_EAX                 //push eax

	,//4
		LEA(EAX, [EBP, ALLWC])   //lea eax, [ebp + timeStr]
	+	PUSH(0x80)               //push 80h
	+	PUSH_EAX                 //push eax
	+	CALL([POS3WC])           //call dword ptr [&MSVCR#.strftime]
	+	ADD(ESP, 0x10)           //add esp, 10h

	,//5
		LEA(EAX, [EBP, ALLWC])   //lea eax, [ebp + timeStr]
	+	PUSH_EAX                 //push eax
	+	PUSH(0xBC4)              //push 0BC4h

	,//6
		CALL(ALLWC)              //call MsgStr
	];

	const addr = Exe.FindHex(parts);
	if (addr < 0)
		throw Error("Function not found");

	$$(_, 1.2, `Calculate the different positional addresses`)
	const [, retnPos1, callPos1, retnPos2, leaPos1, leaPos2, callPos2] = MapAddrs(addr, parts);

	$$(_, 1.3, `Ensure we dont have a false match`)
	if (Exe.GetTgtAddr(callPos1 + 1) !== Exe.GetTgtAddr(callPos2 + 1))
		throw Error("Mismatched function CALLs");

	const ins = Instr.FromAddr(leaPos1);
	if (ins.Disp !== Instr.FromAddr(leaPos2).Disp)
		throw Error("Mismatched offsets");

	$$(_, 1.4, `Extract the localTime32 function address`)
	const localTime32 = Exe.GetInt32(addr + 2);

	$$(_, 2.1, `Construct the new code`)
	let code =
		CMP([EAX], 0)       //cmp dword ptr [eax], 0
	+	JZ(0xB)             //jz short _skip
	+	CALL([localTime32]) //call dword ptr [&MSVCR#._localtime32]
	+	JMP(Filler(1))      //jmp <retnPos1>
	+	POP_EAX             //pop eax ; _skip
	+	ins                 //lea eax, [ebp + timeStr]
	+	MOV([EAX], 0)       //mov dword ptr [eax], 0
	+	JMP(Filler(2))      //jmp <retnPos2>
	;

	$$(_, 2.2, `Prepare the arguments for auto-hook`)
	const args =
	{
		targets : {
			1 : Exe.Phy2Vir(retnPos1, CODE),
		    2 : Exe.Phy2Vir(retnPos2, CODE)
		}
	};

	$$(_, 2.3, `Add our code and jump to it from addr`)
	AutoHook(addr, code, args);

	return true;
};

///
/// \brief Disable for unsupported clients - Only 2017+ has it
///
HideZeroDateInGuildWin.validate = () =>
	Exe.BuildDate > 20170000;
