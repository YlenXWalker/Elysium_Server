/**************************************************************************\
*                                                                          *
*   Copyright (C) 2013-2024 Neo-Mind                                       *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Neo-Mind                                               *
*   Created Date  : 2020-11-08                                             *
*   Last Modified : 2024-08-09                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief NOP out or Add the Roulette Icon UIWindow creation code (ID = 0x11D or 0x10C)
///        and hook it to where it was supposed to be present
///
RouletteVis = function(_)
{
	$$(_, 1.1, `Ensure the WINMGR object has been loaded`)
	WINMGR.load();

	$$(_, 1.2, `Find the UIWindow creation before Roulette which is always present (uses ID = 0B5h)`)
	let code =
		JE(0x0F)        //je short _skip
	+	PUSH(0xB5)      //push 0B5h
	+	WINMGR.MovECX   //mov ecx, <g_windowMgr>
	+	CALL()          //call UIWindowMgr::MakeWindow
	;

	const jmpAddr = Exe.FindHex(code);
	if (jmpAddr < 0)
		throw Error("B5 UIWindow creation not found");

	$$(_, 1.3, `Save location after the CALL`)
	const retnAddr = jmpAddr + code.byteCount() + 4;

	$$(_, 1.4, `Get window ID based on client date`)
	const id = (Exe.BuildDate > 20150800) ? 0x10C : 0x11D;

	if (_ === "ShowRoulette")
	{
		$$(_, 2.1, `Check if the instruction at retnAddr is PUSH 11D/10C for Roulette UIWindow creation`)
		if (Exe.GetUint8(retnAddr) === 0x68 && Exe.GetInt32(retnAddr + 1) === id)
			Cancel("Roulette Icon is already shown");

		$$(_, 2.2, `Construct our code to create the icon`)
		code +=
			Filler(1)        //call UIWindowMgr::MakeWindow ; E8 opcode is already there
		+	PUSH(id)         //push 11Dh / 10Ch
		+	WINMGR.MovECX    //mov ecx, <g_windowMgr>
		+	CALL(Filler(1))  //call UIWindowMgr::MakeWindow
		+	JMP(Filler(2))   //jmp <retnAddr> ; jump back to retnAddr
		;

		$$(_, 2.3, `Prepare the arguments for auto-hook`)
		const args =
		{
			targets : {
				1 : WINMGR.MakeWin,
				2 : Exe.Phy2Vir(retnAddr, CODE)
			}
		};

		$$(_, 2.4, `Add our code and jump to it from jmpAddr`)
		AutoHook(jmpAddr, code, args);
	}
	else
	{
		$$(_, 3.1, `Ensure its not already hidden`)
		if (Exe.GetUint8(retnAddr) !== 0x68 || Exe.GetInt32(retnAddr + 1) !== id)
			Cancel("Roulette Icon is already hidden");

		$$(_, 3.2, `NOP it out otherwise (5 for PUSH, 5 for MOV ECX, 5 for CALL similar to the steps for 0B5h above)`)
		Exe.SetNOPs(retnAddr, 15);
	}

	return true;
};

///
/// \brief Only Enable for Clients that actually have the icon
///
RouletteVis.validate = () =>
	ROC.RouletteAddr > 0;

///
/// \brief Wrappers for individual patches
///
ShowRoulette = RouletteVis;
HideRoulette = RouletteVis;
