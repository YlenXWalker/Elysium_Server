/**************************************************************************\
*                                                                          *
*   Copyright (C) 2018-2024 Andrei Karas (4144)                            *
*                                                                          *
*   This file is a part of WARP project                                    *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Andrei (4144)                                          *
*   Created Date  : 2021-06-15                                             *
*   Last Modified : 2024-08-14                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Change the 'version' address being used and set up our own flag at the new address
///
SendClientFlags = function(_)
{
	if (!CACHE.has('SCF_Addrs'))
	{
		$$(_, 1.1, `Find the string 'langtype'`)
		let addr = Exe.FindText("langtype");
		if (addr < 0)
			throw Error("'langtype' not found");

		$$(_, 1.2, `Find where it is PUSHed`)
		addr = Exe.FindHex(PUSH(addr) + MOV(ECX, R32)); //push offset 'langtype'
		                                                //mov ecx, regA
		if (addr < 0)
			throw Error("'langtype' not PUSHed");

		$$(_, 1.3, `Find the assignment to g_version before it`)
		addr = Exe.FindLastHex(MOV([POS4WC], EAX), addr, addr - 10); //mov dword ptr [g_version], eax
		if (addr < 0)
			throw Error("version address not assigned");

		$$(_, 1.4, `Extract the address`)
		const versionAddr = Exe.GetInt32(addr + 1);

		$$(_, 1.5, `Find all the register assignment using it's value as source. 6 occurences expected`)
		let SCF_Addrs = new Set();
		for (const reg of [EAX, ECX, EDX])
		{
			for (const addr of Exe.FindHexN(MOV(reg, [versionAddr])))
				SCF_Addrs.add(addr);
		}
		if (SCF_Addrs.size !== 6 && (SCF_Addrs.size !== 3 || ROC.FullVer != 14.29))
			throw Error("Unexpected no of version address references");

		$$(_, 1.6, `Save the addresses`)
		CACHE.put('SCF_Addrs', SCF_Addrs);
	}

	$$(_, 2.1, `Add the flag`)
	const [, freeVir] = Exe.AddUint32(0x80000000 | (Warp.GetPatchState("PreviewInShop") && 1) | (Warp.GetPatchState("PreviewInDealer") && 2));

	$$(_, 2.2, `Change the address used in all the 6 assignments`)
	for (const addr of CACHE.get('SCF_Addrs'))
	{
		const ins = Instr.FromAddr(addr);
		Exe.SetInt32(ins.NextAddr - 4, freeVir);
	}

	return true;
};
