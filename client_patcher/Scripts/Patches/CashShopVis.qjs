/**************************************************************************\
*                                                                          *
*   Copyright (C) 2014-2024 Neo-Mind                                       *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Neo-Mind                                               *
*   Created Date  : 2020-11-08                                             *
*   Last Modified : 2024-08-08                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Find the reference UIWindow creation code and use it to
///        HideCashShop - NOP out the code for Cash Shop Icon creation (ID = 0xBE) if present before it.
///        ShowCashShop - Inject code for Cash Shop Icon creation (ID = 0xBE) before it if not present.
///
CashShopVis = function(_)
{
	$$(_, 1.1, `Ensure that 'Move Cash Shop Icon' patch is not selected (unless in test mode)`)
	if (!Warp.TestMode && _ === 'HideCashShop')
		Warp.SetPatchState('MoveShopIcon', false);

	$$(_, 1.2, `Ensure the WINMGR object has been loaded`)
	WINMGR.load();

	$$(_, 1.3, `Find the reference location (where another icon is created)`)
	let code =
		JNE(0xF)       //jne short _skip ; to location after the call for creating another icon
	+	PUSH(0x9F)     //push 9Fh
	+	WINMGR.MovECX  //mov ecx, <g_windowMgr>
	+	CALL()         //call UIWindowMgr::MakeWindow
	;

	const jmpAddr = Exe.FindHex(code);
	if (jmpAddr < 0)
		throw Error("Reference PUSH missing");

	$$(_, 1.4, `Now check if the code for cash shop creation is already present`)
	const code2 =
		PUSH(0xBE)     //push 0BEh
	+	WINMGR.MovECX  //mov ecx, <g_windowMgr>
	+	CALL()         //call UIWindowMgr::MakeWindow
	;
	const addr = Exe.FindHex( code2, jmpAddr - 0x30, jmpAddr );

	if (_ === "HideCashShop")
	{
		$$(_, 2.1, `For hiding, ensure it is actually present`)
		if (addr < 0)
			Cancel("Icon is already hidden");

		$$(_, 2.2, `NOP out the creation code`)
		Exe.SetNOPs(addr, code2.byteCount() + 4);
	}
	else
	{
		$$(_, 3.1, `For showing, ensure it is not already created`)
		if (addr > 0)
			Cancel("Icon is already shown");

		$$(_, 3.2, `Prepare our code to create the icon`)
		code +=
			Filler(1)        //Remaining parts are already used for search above

		+	PUSH(0xBE)       //push 0BEh  ; _skip
		+	WINMGR.MovECX    //mov ecx, <g_windowMgr>
		+	CALL(Filler(1))  //call UIWindowMgr::MakeWindow
		+	JMP(Filler(2))   //jmp <retnAddr>
		;

		$$(_, 3.3, `Prepare the arguments for auto-hook`)
		const args =
		{
			targets : {
				1 : WINMGR.MakeWin,
				2 : Exe.Phy2Vir(jmpAddr + code.byteCount() + 4, CODE) //Location after the CALL for 0x9F
			},
		};

		$$(_, 3.4, `Add our code and jump to it from jmpAddr`)
		AutoHook(jmpAddr, code, args);
	}

	return true;
};

///
/// Disable for unsupported clients (need to have cash shop present)
///
CashShopVis.validate = HasCashShop;

///
/// \brief Wrappers for individual patches
///
HideCashShop = CashShopVis;
ShowCashShop = CashShopVis;
