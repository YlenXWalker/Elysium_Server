/**************************************************************************\
*                                                                          *
*   Copyright (C) 2017-2024 Secret                                         *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Secret                                                 *
*   Created Date  : 2021-01-14                                             *
*   Last Modified : 2024-08-12                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief NOP out the conditional jump preventing plugins from loading inside InitMSS function.
///
LoadClientPlugins = function(_)
{
	$$(_, 1.1, `Find the string 'SOUNDMODE'`)
	let addr = Exe.FindText("SOUNDMODE");
	if (addr < 0)
		throw Error("'SOUNDMODE' not found");

	$$(_, 1.2, `Find where it is PUSHed`)
    const refAddr = Exe.FindHex(PUSH(addr)); //push offset "SOUNDMODE"
    if (refAddr < 0)
        throw Error("'SOUNDMODE' not used");

	$$(_, 2.1, `Find the soundMode offset used as argument to RegQueryValueEx CALL before the PUSH`)
	let code =
		PUSH(POS4WC)         //push <soundMode>
	+	LEA(R32, [EBP, WC])  //lea regA, [ebp + Type]
	+	(Exe.Version > 11
	?
		MOV([EBP, WC], 4)    //mov dword ptr [ebp + cbData], 4
	:
		''
	)
	+	PUSH_R               //push regA
	+	PUSH_0               //push 0
    ;

	addr = Exe.FindLastHex(code, refAddr, refAddr - 0x20);
	if (addr < 0)
        throw Error("RegQueryValueEx CALL missing");

	$$(_, 2.2, `Extract the offset`)
	const soundMode = Exe.GetHex(addr + 1, 4);

    $$(_, 3.1, `Find soundMode comparison`)
	switch (Exe.Version)
	{
		case 10: //VC10
		{
			code =
				ADD(EAX, 4)           //add eax, 4
			+	DEC(ECX)              //dec ecx
			+	JNZ(WCn)              //jnz short _loop
			+	XOR(EDI, EDI)         //xor edi, edi
			+	CMP([soundMode], EDI) //cmp dword ptr [soundMode], edi
			;
			break;
		}

		case 11: //VC11
		{
			code =
				LEA(EAX, [EAX, 4])    //lea eax, [eax+4]
			+	DEC(ECX)              //dec ecx
			+	JNZ(WCn)              //jnz short _loop
			+	CMP([soundMode], ECX) //cmp dword ptr [soundMode], ecx
			;
			break;
		}

		default: //VC14.16
		{
			code =
				LEA(EAX, [EAX, 4])    //lea eax, [eax+4]
			+	MOV([EAX, -4], 0)     //mov dword ptr [eax-4], 0
			+	SUB(ECX, 1)           //sub ecx, 1
			+	JNZ(WCn)              //jnz short _loop
			+	CMP([soundMode], ECX) //cmp dword ptr [soundMode], ecx
			;
			break;
		}
	}
	addr = Exe.FindHex(code + JE(POS2WC));
	if (addr < 0)
        throw Error("soundMode comparison missing");

	$$(_, 3.2, `NOP out the JE`)
	Exe.SetNOPs(addr + code.byteCount(), 6);

    return true;
};

///
/// \brief Disable for Older clients since they do not have the conditional jump
///
LoadClientPlugins.validate = () =>
	Exe.BuildDate > 20131200;
