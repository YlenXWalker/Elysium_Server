/**************************************************************************\
*                                                                          *
*   Copyright (C) 2015 MegaByte                                            *
*   Copyright (C) 2020-2024 X-EcutiOnner  (xex.ecutionner@gmail.com)       *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : MegaByte, X-EcutiOnner                                 *
*   Created Date  : 2020-11-08                                             *
*   Last Modified : 2024-08-09                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Find the walk delay addition and
///        NoWalkDelay - NOP it out
///        CustomWalkDelay - Change it to user specified value
///
WalkDelay = function(_)
{
	$$(_, 1.1, `Find the delay addition`)
	const reg = (Exe.Version === 6 ? EDX : ECX); //VC6 uses EDX
	let code =
		ADD(reg, 0x258)   //add regA, 258h ; 600ms
	+   CMP(EAX, reg)     //cmp eax, regA ; regA is Either edx OR ecx
	;

	let addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("Delay addition missing");

	$$(_, 1.2, `Save it to array`)
	let tgtAddrs = [addr];

	if (Exe.BuildDate > 20170329)
	{
		$$(_, 1.3, `For newer clients look for the 2nd delay addition`)
		code =
			ADD(ECX, 0x15E)  //add ecx, 15Eh ; 350ms
		+	CMP(EAX, ECX)    //cmp eax, ecx
		;

		addr = Exe.FindHex(code);
		if (addr < 0)
			throw Error("2nd Delay addition missing");

		$$(_, 1.4, `Add to array`)
		tgtAddrs.push(addr);
	}

	if (_ === "NoWalkDelay")
	{
		$$(_, 2.1, `NOP out the addition if no walk delay is desired`)
		for (const addr of tgtAddrs)
			Exe.SetNOPs(addr, 6);
	}
	else
	{
		$$(_, 2.2, `Get the new delay value from user`)
		let varName = '$walkDelay';
		let result = Exe.GetUserInput(varName, D_Uint16, "Walk Delay", "Enter the first new walk delay (snaps to closest valid value)", 600, {min: 0, max: 1000});
		if (result === false)
			Cancel("Delay", 600);

		$$(_, 2.3, `Replace the value`)
		Exe.SetFromVar(tgtAddrs[0] + 2, varName);

		if (tgtAddrs[1])
		{
			$$(_, 2.4, `Repeat the steps for the 2nd location`)
			varName = '$walkDelay2';
			result = Exe.GetUserInput(varName, D_Uint16, "Walk Delay", "Enter the second new walk delay (snaps to closest valid value)", result, {min: 0, max: 1000, saveDefault: true});

			if (result !== false)
				Exe.SetFromVar(tgtAddrs[1] + 2, varName);
		}
	}

	return true;
};

///
/// \brief Wrappers for individual patches
///
NoWalkDelay     = WalkDelay;
CustomWalkDelay = WalkDelay;
