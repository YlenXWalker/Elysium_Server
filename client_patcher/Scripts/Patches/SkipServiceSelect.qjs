/**************************************************************************\
*                                                                          *
*   Copyright (C) ?-2015 Shinryo                                           *
*   Copyright (C) 2017-2020 *Unknown*                                      *
*   Copyright (C) 2015-2023 Neo-Mind                                       *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Shinryo, Neo-Mind                                      *
*   Created Date  : 2020-11-10                                             *
*   Last Modified : 2023-08-26                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief NOP out the conditional jump / change conditional move to MOV
///        This ensures g_hideAccountList is always set to 1
///
SkipServiceSelect = function(_)
{
	$$(_, 1, `Find the string 'passwordencrypt'`)
	let addr = Exe.FindText("passwordencrypt");
	if (addr < 0)
		throw Error("'passwordencrypt' not found");

	$$(_, 2, `Find where it is PUSHed`)
	let code, repl;
	if (Exe.Version < 11) //VC6 - VC10
	{
		code =
			JZ(0x07)                     //jz short _skip
		+   MOV(BYTE_PTR, [POS3WC], 1)   //mov byte ptr [g_hideAccountList], 1
		+   PUSH(addr)                   //push offset "passwordencrypt"
		;
		repl = 0x9090; //nop + nop to replace jz short
	}
	else
	{
		code =
			CMOVNZ(R32, R32)             //cmovnz regA, regB
		+   MOV([POS4WC], R8)            //mov byte ptr [g_hideAccountList], reg8A
		+	(Exe.Version > 11.0 ?
			MOV(R32, R32) 				 //mov regA, regC
		:
			"")
		+   PUSH(addr)                   //push offset "passwordencrypt"
		;
		repl = 0x8B90; //nop + mov to replace cmovnz
	}

	addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("'passwordencrypt' not used");

	$$(_, 3, `Change the conditional instruction`)
	Exe.SetUint16(addr, repl);

	return true;
};
