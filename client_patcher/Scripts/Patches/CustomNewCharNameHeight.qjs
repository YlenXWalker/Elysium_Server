/**************************************************************************\
*                                                                          *
*   Copyright (C) 2018-2024 Andrei Karas (4144)                            *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANT??ILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Andrei (4144)                                          *
*   Created Date  : 2021-01-23                                             *
*   Last Modified : 2024-08-08                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Change height for UIEditCtrl2 in UINewMakeCharWnd_virt56
///
CustomNewCharNameHeight = function(_)
{
	$$(_, 1.1, `Find the string PUSH`)
	const code =
		PUSH(2)            //push 2
	+	PUSH(this.BmpAddr) //push offset "À¯ÀúÀÎÅÍÆäÀÌ½º\\make_character_ver2\\bt_make_press.bmp"
	+	MOV(ECX, R32)      //mov ecx, regA
	;
	let addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("Reference pattern missing");

	$$(_, 1.2, `Set addr to after the MOV`)
	addr += code.byteCount();

	$$(_, 1.3, `Find the Height PUSH after it`)
	let prefix =
		MOV([EBP, WCn], -1)      //mov dword ptr [LOCAL.x], -1
	;
	let suffix =
		MOV([EBX, POS2WC], EAX)  //mov dword ptr [ebx + dispA], eax
	+	CALL(ALLWC)              //call UIWindow::Create
	+	MOV(ECX, [EBX, POS2WC])  //mov ecx, dword ptr [ebx + dispA]
	;
	if (Exe.Version > 11) //VC14.16
	{
		prefix +=
			MOV(ECX, EAX)        //mov ecx, eax
		;
		suffix =
			PUSH(WCp)            //push <height>
		+	PUSH(0x82)           //push 82h
		+	suffix
		;
	}
	else
	{
		suffix =
			PUSH(WCp)            //push <height>
		+	PUSH(0x82)           //push 82h
		+	MOV(ECX, EAX)        //mov ecx, eax
		+	suffix
		;
	}
	
	addr = Exe.FindHex(prefix + suffix, addr + 0x100, addr + 0x380);
	if (addr < 0)
		throw Error("Height PUSH missing");

	$$(_, 1.4, `Set addr to the position of the PUSH`)
	addr += prefix.byteCount();

	$$(_, 2.1, `Extract the current height`)
	const oldHeight = Exe.GetInt8(addr + 1);

	$$(_, 2.2, `Retrieve the new value from user`)
	const varName = '$newCharNameHeight';
    const height = Exe.GetUserInput(varName, D_Uint8, "Field Height", "Enter new char name height", oldHeight);
    if (height === false)
		Cancel("Height", oldHeight);

	$$(_, 2.3, `Replace the old value`)
    Exe.SetFromVar(addr + 1, varName);

    return true;
};

///
/// \brief Disable for unsupported clients (without the new window)
///
CustomNewCharNameHeight.validate = function()
{
	this.BmpAddr = Exe.FindText("À¯ÀúÀÎÅÍÆäÀÌ½º\\make_character_ver2\\bt_make_press.bmp");
	return this.BmpAddr > 0;
};
