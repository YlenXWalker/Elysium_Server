//===== rAthena Script =======================================
//= Eden Group Quests - Mission [121-130]
//===== By: ==================================================
//= Capuche, Updated by LTSteinhil
//===== Current Version: =====================================
//= 1.4
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= [Official Conversion]
//= Repeatable quests for players between BaseLevel 121 - 130.
//===== Additional Comments: =================================
//= 1.0 First version.
//= 1.1 Added support to Para_Team_Mark_ in Eden Group. [Ragno]
//= 1.2 Added use of F_HasEdenGroupMark function. [Ragno]
//= 1.3 Added quest management menu for accept/abandon all quests. [LTSteinhil]  
//= 1.4 Restructured to match array-based system. [LTSteinhil]  
//============================================================
  
moc_para01,44,81,3	script	Mission [121 - 130]#1	4_M_MELODY,{  
	mes " ";
	setdialogsize(400, 300);
	setdialogpospercent(50, 50);
    mes "<B>[ Melody-Jack ]</B>";  
    if (!callfunc("F_HasEdenGroupMark")) {  
        mes "Who the hell are you? Get out of here!";  
        mes "I'm only talking to base level ^FF0000121-130^000000 adventurers.";  
        close;  
    }  
      
    if (BaseLevel < 121) {  
        mes "Oh, I made a mistake. You are not the level of adventurer I am looking for. I'm looking for base level 121 to 130 adventurers.";  
        close;  
    }   
      
    // Initialize relationship if first meeting  
    if (para_120lv01 == 0) {  
        callsub L_FirstMeeting;  
        close;  
    }  
      
	mes "Welcome " + strcharinfo(0) + " to the Eden Group Level 121-130 Quests!";  
    mes "What would you like to do today?";  
    next;  
      
    switch(select("Quest Management:Individual Quests:Small Talk:Information")) {  
    case 1: callsub L_QuestManagement; break;  
    case 2: callsub L_IndividualQuests; break;  
    case 3: callsub L_SmallTalk; break;  
    case 4: callsub L_Information; break;  
    }  
    close;  
  
L_FirstMeeting:  
    mes "What? do not bother me. I am busy now.";  
    next;  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "I am ^ff0000Melody - Jack!^000000 The best man with best dagger skills.";  
    next;  
    mes "Melody-Jack swipes a dagger in your direction.";  
    next;  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "I am qualified to take secret missions. And right now you're in luck.";  
    next;  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "I've modernized my quest system to be more efficient. Ready to make a deal?";  
    para_120lv01 = 1;  
    return;  
  
L_QuestManagement:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Quest Management Options:";  
    next;  
    switch(select("^0000FFAccept All Available Quests^000000:^FF0000Abandon All Active Quests^000000:Submit All Completed Quests:Quest Status:Back")) {  
    case 1: callsub L_AcceptAll; break;  
    case 2: callsub L_AbandonAll; break;  
    case 3: callsub L_SubmitAll; break;  
    case 4: callsub L_QuestStatus; break;  
    case 5: return;  
    }  
    return;  
  
L_AcceptAll:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Accepting all available contracts for your level...";  
    next;  
      
    // Quest arrays for level 121-130  
    setarray .@quest_ids[0], 13119, 13121, 13123, 13125, 13127, 13129, 13131, 13133, 13135, 13137, 13139, 13141;  
      
    .@accepted = 0;  
    for (.@i = 0; .@i < getarraysize(.@quest_ids); .@i++) {  
        if (checkquest(.@quest_ids[.@i]) > -1) continue; // Already have quest  
          
        setquest .@quest_ids[.@i];  
        .@accepted++;  
    }  
      
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Accepted " + .@accepted + " new contracts!";  
    mes "Check your quest log for details. A deal is a deal.";  
    return;  
  
L_AbandonAll:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Are you sure you want to abandon ALL active contracts?";  
    mes "^FF0000Breaking deals has consequences!^000000";  
    next;  
    if (select("Yes, abandon all:No, keep them") == 2) {  
        mes "<B>[ Melody-Jack ]</B>";  
        mes "Smart choice. I respect those who honor their deals.";  
        return;  
    }  
      
    // Array of all possible quest IDs  
    setarray .@all_quests[0], 13119, 13121, 13123, 13125, 13127, 13129, 13131, 13133, 13135, 13137, 13139, 13141;  
      
    .@abandoned = 0;  
    for (.@i = 0; .@i < getarraysize(.@all_quests); .@i++) {  
        if (checkquest(.@all_quests[.@i]) > -1) {  
            erasequest .@all_quests[.@i];  
            .@abandoned++;  
        }  
    }  
      
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Abandoned " + .@abandoned + " contracts.";  
    mes "Don't make a habit of this...";  
    return;  
  
L_SubmitAll:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Checking for completed contracts...";  
    next;  
      
    // Quest arrays matching reward indices  
    setarray .@hunt_quests[0], 13119, 13121, 13123, 13125, 13127, 13129, 13131, 13133, 13135, 13137, 13139, 13141;  
    setarray .@hunt_names$[0], "Baroness of Retribution", "Lady Solace", "Mistress of Shelter", "Dame of Sentinel", "Vanberk and Isilla", "Hodremlin", "Agav and Echio", "Ragged Zombie", "Zombie Slaughter", "Banshee", "Ferus and Bewler", "Gold and Blue Acidus";  
      
    .@submitted = 0;  
      
    // Check hunting contracts  
    for (.@i = 0; .@i < getarraysize(.@hunt_quests); .@i++) {  
        if (checkquest(.@hunt_quests[.@i], HUNTING) == 2) {  
            mes "<B>[ Melody-Jack ]</B>";  
            mes "Contract completed: " + .@hunt_names$[.@i];  
            mes "Base Experience: "+ F_Insertcomma(.base_exp[.@i]) +".";  
            mes "Job Experience: "+ F_Insertcomma(.job_exp[.@i]) +".";  
            mes "Payment: "+ .item_amount[.@i] +"x "+ mesitemicon(.item_reward[.@i]) +" "+ getitemname(.item_reward[.@i]) +".";  
            next;  
              
            erasequest .@hunt_quests[.@i];  
            getexp .base_exp[.@i], .job_exp[.@i];  
            getitem .item_reward[.@i], .item_amount[.@i];  
            para_121lv02 += 1;  
            .@submitted++;  
            next;  
        }  
    }  
      
    if (.@submitted == 0) {  
        mes "<B>[ Melody-Jack ]</B>";  
        mes "No completed contracts found. Get back to work!";  
    } else {  
        mes "<B>[ Melody-Jack ]</B>";  
        mes "Submitted " + .@submitted + " completed contracts!";  
        mes "A deal is a deal. Payment delivered.";  
    }  
    return;  
  
L_QuestStatus:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Current Contract Status:";  
    mes " ";  
      
    setarray .@all_quests[0], 13119, 13121, 13123, 13125, 13127, 13129, 13131, 13133, 13135, 13137, 13139, 13141;  
    setarray .@quest_names$[0], "Baroness of Retribution", "Lady Solace", "Mistress of Shelter", "Dame of Sentinel", "Vanberk and Isilla", "Hodremlin", "Agav and Echio", "Ragged Zombie", "Zombie Slaughter", "Banshee", "Ferus and Bewler", "Gold and Blue Acidus";  
      
    .@active = 0;  
    for (.@i = 0; .@i < getarraysize(.@all_quests); .@i++) {  
        .@status = checkquest(.@all_quests[.@i], HUNTING);  
          
        if (.@status > -1) {  
            if (.@status == 2)  
                mes "^00FF00" + .@quest_names$[.@i] + "^000000 - ^00FF00READY FOR PAYMENT^000000";  
            else  
                mes "^000000" + .@quest_names$[.@i] + "^000000 - ^0000FFIN PROGRESS^000000";  
            .@active++;  
        }  
    }  
      
    if (.@active == 0) {  
        mes "^FF0000No active contracts.^000000";  
    }  
      
    mes " ";  
    mes "Total completed contracts: " + para_121lv02;  
    return;  
  
L_IndividualQuests:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Choose a contract category:";  
    next;  
      
    switch(select("Thanatos Tower Contracts:Rachel Shrine Contracts:Nameless Island Contracts:Abyss Lake Contracts:Back")) {  
    case 1: callsub L_ThanatosContracts; break;  
    case 2: callsub L_RachelContracts; break;  
    case 3: callsub L_NamelessContracts; break;  
    case 4: callsub L_AbyssContracts; break;  
    case 5: return;  
    }  
    return;  
  
L_ThanatosContracts:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Thanatos Tower contracts:";  
    next;  
      
    switch(select("Baroness of Retribution:Lady Solace:Mistress of Shelter:Dame of Sentinel:Back")) {  
    case 1: callsub L_HandleContract, 13119, "Baroness of Retribution", 30, "Thanatos Tower", 0; break;  
    case 2: callsub L_HandleContract, 13121, "Lady Solace", 30, "Thanatos Tower", 1; break;  
    case 3: callsub L_HandleContract, 13123, "Mistress of Shelter", 30, "Thanatos Tower", 2; break;  
    case 4: callsub L_HandleContract, 13125, "Dame of Sentinel", 30, "Thanatos Tower", 3; break;  
    case 5: return;  
    }  
    return;  
  
L_RachelContracts:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Rachel Shrine contracts:";  
    next;  
      
    switch(select("Vanberk and Isilla:Hodremlin:Agav and Echio:Back")) {  
    case 1: callsub L_HandleContract, 13127, "Vanberk and Isilla", 30, "Rachel Shrine", 4; break;  
    case 2: callsub L_HandleContract, 13129, "Hodremlin", 30, "Rachel Shrine", 5; break;  
    case 3: callsub L_HandleContract, 13131, "Agav and Echio", 30, "Rachel Shrine", 6; break;  
    case 4: return;  
    }  
    return;  
  
L_NamelessContracts:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Nameless Island contracts:";  
    next;  
      
    switch(select("Ragged Zombie:Zombie Slaughter:Banshee:Back")) {  
    case 1: callsub L_HandleContract, 13133, "Ragged Zombie", 30, "Nameless Island", 7; break;  
    case 2: callsub L_HandleContract, 13135, "Zombie Slaughter", 30, "Nameless Island", 8; break;  
    case 3: callsub L_HandleContract, 13137, "Banshee", 30, "Nameless Island", 9; break;  
    case 4: return;  
    }  
    return;  
  
L_AbyssContracts:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Abyss Lake contracts:";  
    next;  
      
    switch(select("Ferus and Bewler:Gold and Blue Acidus:Back")) {  
    case 1: callsub L_HandleContract, 13139, "Ferus and Bewler", 30, "Abyss Lake", 10; break;  
    case 2: callsub L_HandleContract, 13141, "Gold and Blue Acidus", 30, "Abyss Lake", 11; break;  
    case 3: return;  
    }  
    return;

L_HandleContract:  
    .@quest_id = getarg(0);  
    .@monster_name$ = getarg(1);  
    .@count = getarg(2);  
    .@location$ = getarg(3);  
    .@index = getarg(4);  
      
    if (checkquest(.@quest_id, HUNTING) == 1) {  
        mes "<B>[ Melody-Jack ]</B>";  
        mes "You're currently working on the " + .@monster_name$ + " contract in " + .@location$ + ".";  
        mes "Come back when you've completed the elimination requirements.";  
        return;  
    }  
      
    if (checkquest(.@quest_id, HUNTING) == 2) {  
        mes "<B>[ Melody-Jack ]</B>";  
        mes "Contract completed: " + .@monster_name$ + "!";  
        mes "Base Experience: "+ F_Insertcomma(.base_exp[.@index]) +".";  
        mes "Job Experience: "+ F_Insertcomma(.job_exp[.@index]) +".";  
        mes "Payment: "+ .item_amount[.@index] +"x "+ mesitemicon(.item_reward[.@index]) +" "+ getitemname(.item_reward[.@index]) +".";  
        next;  
          
        erasequest .@quest_id;  
        getexp .base_exp[.@index], .job_exp[.@index];  
        getitem .item_reward[.@index], .item_amount[.@index];  
        para_121lv02 += 1;  
        return;  
    }  
      
    mes "<B>[ Melody-Jack ]</B>";  
    mes "I need you to eliminate " + .@count + " " + .@monster_name$ + " in " + .@location$ + ".";  
    mes "It's a dangerous contract, but the payment is worth it.";  
    next;  
      
    if (select("Accept Contract:Decline") == 1) {  
        mes "<B>[ Melody-Jack ]</B>";  
        mes "Good. A deal is a deal. Get to work on " + .@monster_name$ + ".";  
        setquest .@quest_id;  
    } else {  
        mes "<B>[ Melody-Jack ]</B>";  
        mes "Come back when you're ready to make a real deal.";  
    }  
    return;  
  
L_SmallTalk:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "What do you want to know?";  
    next;  
      
    switch(select("About deals:About requests:About promises:Finish conversation")) {  
    case 1: callsub L_AboutDeals; break;  
    case 2: callsub L_AboutRequests; break;  
    case 3: callsub L_AboutPromises; break;  
    case 4: return;  
    }  
    return;  
  
L_AboutDeals:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "To be honest I don't think there is anyone worthy of trust. Trust or promises are both silly.";  
    next;  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "I trust only me and my deal. Trust or promises are empty if they are broken but if a deal is broken there is compensation or revenge.";  
    return;  
  
L_AboutRequests:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "I cannot stop it because of my bad credit. It drives me crazy.";  
    next;  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "I am lucky to make a double contract with an adventurer like you. They are not included in our contract.";  
    return;  
  
L_AboutPromises:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Who're all of these kids?";  
    next;  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "I came out for nothing but I am supposed to fulfill my duty. I don't owe anyone a thing.";  
    return;  
  
L_Information:  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "This modernized contract system allows for efficient batch processing of multiple elimination jobs.";  
    next;  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "You can accept all available contracts at once, submit completed work in batches, and track your progress easily.";  
    next;  
    mes "<B>[ Melody-Jack ]</B>";  
    mes "Much more efficient than dealing with individual requests. A deal is a deal.";  
    return;  
  
// Initialize reward arrays  
OnInit:  
    setunitdata(getnpcid(0), UNPC_GROUP_ID, 6);  
    setunittitle(getnpcid(0), "Melody-Jack");  
	questinfo( QTYPE_QUEST, QMARK_YELLOW, "BaseLevel >= 121 && BaseLevel <= 130" );
    // Base experience rewards  
    setarray .base_exp[0], 900000, 900000, 900000, 900000, 900000, 900000, 900000, 900000, 900000, 900000, 900000, 900000;  
      
    // Job experience rewards  
    setarray .job_exp[0], 200000, 200000, 200000, 200000, 200000, 200000, 200000, 200000, 200000, 200000, 200000, 200000;  
      
    // Item rewards  
    setarray .item_reward[0], 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223;  
      
    // Item amounts  
    setarray .item_amount[0], 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8;  
    end;  
   
}  
  
// Keep the Aigu NPC for compatibility but make it redirect to main quest system  
moc_para01,17,77,5	script	Aigu#1	4_F_IU,{  
	mes " ";
	setdialogsize(400, 300);
	setdialogpospercent(50, 50);
    mes "<B>[ Aigu ]</B>";  
    if (!callfunc("F_HasEdenGroupMark")) {  
        mes "Oh, why aren't you a part of Eden Group?";  
        mes "I'm only talking to base level ^FF0000121-130^000000 adventurers.";  
        close;  
    }  
      
    cutin "igu01",2;  
    mes "Hi! For quest management, please talk to Melody-Jack over there.";  
    mes "He's handling all the contracts now with a new efficient system!";  
    close2;  
    cutin "",255;  
    end;  
}

-	script	Trace of an adventurer	-1,{
	.@quest = 13106 + atoi(strnpcinfo(2));
	.@delay = 13110 + atoi(strnpcinfo(2));
	mes " ";
	setdialogsize(400, 300);
	setdialogpospercent(50, 50);	
	if (isbegin_quest(.@quest) == 1) {
		mes "I found traces of someone who was here but I cannot find a clue. Lets go back and report to Aigu.";
		erasequest .@quest;
		setquest .@delay;
	}
	else
		mes "There are traces of someone being here.";
	close;
}
thana_step,167,292,5	duplicate(Trace of an adventurer)	Trace of an adventurer#1	4_TRACE
ra_san05,265,69,5	duplicate(Trace of an adventurer)	Trace of an adventurer#2	4_TRACE
abbey02,155,290,5	duplicate(Trace of an adventurer)	Trace of an adventurer#3	4_TRACE
abyss_03,102,140,5	duplicate(Trace of an adventurer)	Trace of an adventurer#4	4_TRACE

tha_t06,126,128,3	script	Suspicious Monster#1	4_DEVIRUCHI,{
	mes " ";
	setdialogsize(400, 300);
	setdialogpospercent(50, 50);
	mes "<B>[ Disguised Adventurer ]</B>";
	mes "I am just working at this dangerous place for 5000 zeny... Are you the adventurer who got a request from Eden Group?";
	next;
	switch( select( "Yes","No" ) ) {
		mes "<B>[ Disguised Adventurer ]</B>";
	case 1:
		if (BaseLevel < 121 || BaseLevel > 130) {
			mes "I could see that is not you at first glance!";
			close;
		}
		mes "The adventurers proceeding the request for Aigu are warped to the upper level on behalf of Aigu.";
		next;
		if (select( "Go up.", "Do not go up." ) == 1) {
			mes "<B>[ Disguised Adventurer ]</B>";
			if (isbegin_quest(13107) != 1)
				mes "It seems that you're currently not doing the Thanatos Tower adventure request. I'm sorry but I'm doing this for Aigu and not you.";
			else {
				mes "Be careful! You can not come down once you go up. For Aigu!";
				close2;
				warp "thana_step",69,369;
				end;
			}
		}
		close;
	case 2:
		mes "Or please pretend not to know me! I will be in a danger if you blow my cover!";
		close;
	}
}
