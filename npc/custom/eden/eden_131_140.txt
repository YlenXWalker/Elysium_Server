//===== rAthena Script =======================================
//= Eden Group Quests - Mission [131-140]
//===== By: ==================================================
//= Capuche, Updated by LTSteinhil
//===== Current Version: =====================================
//= 1.4
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= [Official Conversion]
//= Repeatable quests for players between BaseLevel 131 - 140.
//===== Additional Comments: =================================
//= 1.0 First version.
//= 1.1 Added support to Para_Team_Mark_ in Eden Group. [Ragno]
//= 1.2 Added use of F_HasEdenGroupMark function. [Ragno]
//= 1.3 Added quest management menu for accept/abandon all quests. [LTSteinhil]  
//= 1.4 Restructured to match array-based system. [LTSteinhil]]
//============================================================

moc_para01,41,76,3	script	Mission [131 - 140]#1	4_M_RAGI,{
    cutin "ragi01",0;
	mes " ";
	setdialogsize(400, 300);
	setdialogpospercent(50, 50);	
    mes "<B>[ Ragi ]</B>";  
    if (!callfunc("F_HasEdenGroupMark")) {  
        mes "Only adventurers from Eden Group are welcome here.";  
        mes "I'm giving requests to base level ^FF0000131-140^000000 adventurers only.";  
        close2;  
        cutin "",255;  
        end;  
    }  
      
    if (BaseLevel < 131) {  
        cutin "ragi02",0;  
        mes "This is the request of Aigu but it is dangerous. You should grow up more.";  
        close2;  
        cutin "",255;  
        end;  
    }   
      
    // Initialize relationship if first meeting  
    if (para_130lv01 == 0) {  
        callsub L_FirstMeeting;  
        close2;  
        cutin "",255;  
        end;  
    }  
      
    mes "Welcome " + strcharinfo(0) + " to the Eden Group Level 131-140 Quests!";  
    mes "What would you like to do today?";  
    next;  
      
    switch(select("Story Management:Individual Stories:Small Talk:Information")) {  
    case 1: callsub L_StoryManagement; break;  
    case 2: callsub L_IndividualStories; break;  
    case 3: callsub L_SmallTalk; break;  
    case 4: callsub L_Information; break;  
    }  
    close2;  
    cutin "",255;  
    end;  
  
L_FirstMeeting:  
    mes "Hi. I'm the new member of the Dandelion band Ragi. I am making songs on behalf of Aigu. Are you interested in a story?";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "Haha. I am sorry to request to adventurers even though I am a new.";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "Just take a look at the list. Can you help me if it is okay with you?";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "I've modernized my story collection system to be more efficient. Ready to help me gather tales?";  
    para_130lv01 = 1;  
    return;  
  
L_StoryManagement:  
    mes "<B>[ Ragi ]</B>";  
    mes "Story Collection Management Options:";  
    next;  
    switch(select("^0000FFAccept All Available Stories^000000:^FF0000Abandon All Active Stories^000000:Submit All Completed Stories:Story Status:Back")) {  
    case 1: callsub L_AcceptAll; break;  
    case 2: callsub L_AbandonAll; break;  
    case 3: callsub L_SubmitAll; break;  
    case 4: callsub L_StoryStatus; break;  
    case 5: return;  
    }  
    return;  
  
L_AcceptAll:  
    mes "<B>[ Ragi ]</B>";  
    mes "Accepting all available story collection quests for your level...";  
    next;  
      
    // Quest arrays for level 131-140  
    setarray .@quest_ids[0], 13143, 13145, 13147, 13149, 13151, 13153, 13155, 13157, 13159, 13161, 13163, 13165, 13167;  
      
    .@accepted = 0;  
    for (.@i = 0; .@i < getarraysize(.@quest_ids); .@i++) {  
        if (checkquest(.@quest_ids[.@i]) > -1) continue; // Already have quest  
          
        setquest .@quest_ids[.@i];  
        .@accepted++;  
    }  
      
    mes "<B>[ Ragi ]</B>";  
    mes "Accepted " + .@accepted + " new story collection quests!";  
    mes "Check your quest log for details. These stories will make beautiful songs!";  
    return;  
  
L_AbandonAll:  
    mes "<B>[ Ragi ]</B>";  
    mes "Are you sure you want to abandon ALL active story collections?";  
    mes "^FF0000These stories might be lost forever!^000000";  
    next;  
    if (select("Yes, abandon all:No, keep them") == 2) {  
        mes "<B>[ Ragi ]</B>";  
        mes "Good choice. Every story deserves to be told.";  
        return;  
    }  
      
    // Array of all possible quest IDs  
    setarray .@all_quests[0], 13143, 13145, 13147, 13149, 13151, 13153, 13155, 13157, 13159, 13161, 13163, 13165, 13167;  
      
    .@abandoned = 0;  
    for (.@i = 0; .@i < getarraysize(.@all_quests); .@i++) {  
        if (checkquest(.@all_quests[.@i]) > -1) {  
            erasequest .@all_quests[.@i];  
            .@abandoned++;  
        }  
    }  
      
    mes "<B>[ Ragi ]</B>";  
    mes "Abandoned " + .@abandoned + " story collections.";  
    mes "I hope we can collect them again someday...";  
    return;  
  
L_SubmitAll:  
    mes "<B>[ Ragi ]</B>";  
    mes "Checking for completed story collections...";  
    next;  
      
    // Story arrays matching reward indices  
    setarray .@story_quests[0], 13143, 13145, 13147, 13149, 13151, 13153, 13155, 13157, 13159, 13161, 13163, 13165, 13167;  
    setarray .@story_names$[0], "Egnigem Cenia", "Armeyer Dinze", "Wickebine Tres", "Kavach Icarus", "Errende Ebecee", "Laurell Weinder", "Angel Incarnation", "Dark Incarnation", "Ghost Incarnation", "Uni-Horn Scaraba", "Horn Scaraba", "Antler Scaraba", "Rake Horn Scaraba";  
      
    .@submitted = 0;  
      
    // Check story collections  
    for (.@i = 0; .@i < getarraysize(.@story_quests); .@i++) {  
        if (checkquest(.@story_quests[.@i], HUNTING) == 2) {  
            mes "<B>[ Ragi ]</B>";  
            mes "Wonderful! " + .@story_names$[.@i] + " story completed.";  
            mes "Base Experience: "+ F_Insertcomma(.base_exp[.@i]) +".";  
            mes "Job Experience: "+ F_Insertcomma(.job_exp[.@i]) +".";  
            mes "Story Reward: "+ .item_amount[.@i] +"x "+ mesitemicon(.item_reward[.@i]) +" "+ getitemname(.item_reward[.@i]) +".";  
            next;  
              
            erasequest .@story_quests[.@i];  
            getexp .base_exp[.@i], .job_exp[.@i];  
            getitem .item_reward[.@i], .item_amount[.@i];  
            para_131lv02 += 1;  
            .@submitted++;  
            next;  
        }  
    }  
      
    if (.@submitted == 0) {  
        mes "<B>[ Ragi ]</B>";  
        mes "No completed stories found. Keep collecting those tales!";  
    } else {  
        mes "<B>[ Ragi ]</B>";  
        mes "Submitted " + .@submitted + " completed stories!";  
        mes "These will make the most beautiful songs for Aigu.";  
    }  
    return;  
  
L_StoryStatus:  
    mes "<B>[ Ragi ]</B>";  
    mes "Current Story Collection Status:";  
    mes " ";  
      
    setarray .@all_quests[0], 13143, 13145, 13147, 13149, 13151, 13153, 13155, 13157, 13159, 13161, 13163, 13165, 13167;  
    setarray .@quest_names$[0], "Egnigem Cenia Story", "Armeyer Dinze Story", "Wickebine Tres Story", "Kavach Icarus Story", "Errende Ebecee Story", "Laurell Weinder Story", "Angel Incarnation Story", "Dark Incarnation Story", "Ghost Incarnation Story", "Uni-Horn Scaraba Story", "Horn Scaraba Story", "Antler Scaraba Story", "Rake Horn Scaraba Story";  
      
    .@active = 0;  
    for (.@i = 0; .@i < getarraysize(.@all_quests); .@i++) {  
        .@status = checkquest(.@all_quests[.@i], HUNTING);  
          
        if (.@status > -1) {  
            if (.@status == 2)  
                mes "^00FF00" + .@quest_names$[.@i] + "^000000 - ^00FF00READY FOR SUBMISSION^000000";  
            else  
                mes "^000000" + .@quest_names$[.@i] + "^000000 - ^0000FFIN PROGRESS^000000";  
            .@active++;  
        }  
    }  
      
    if (.@active == 0) {  
        mes "^FF0000No active story collections.^000000";  
    }  
      
    mes " ";  
    mes "Total completed stories: " + para_131lv02;  
    return;  
  
L_IndividualStories:  
    mes "<B>[ Ragi ]</B>";  
    mes "Choose a story category:";  
    next;  
      
    switch(select("The Story of the Lost:Story of Devil:Story from Far Away Distance:Back")) {  
    case 1: callsub L_LostStories; break;  
    case 2: callsub L_DevilStories; break;  
    case 3: callsub L_DistantStories; break;  
    case 4: return;  
    }  
    return;  
  
L_LostStories:  
    mes "<B>[ Ragi ]</B>";  
    mes "Lighthalzen has many stories that I'm sure are sad and lost:";  
    next;  
      
    switch(select("Egnigem Cenia:Armeyer Dinze:Wickebine Tres:Kavach Icarus:Errende Ebecee:Laurell Weinder:Back")) {  
    case 1: callsub L_HandleStory, 13143, "Egnigem Cenia", 30, "Lighthalzen", 0; break;  
    case 2: callsub L_HandleStory, 13145, "Armeyer Dinze", 30, "Lighthalzen", 1; break;  
    case 3: callsub L_HandleStory, 13147, "Wickebine Tres", 30, "Lighthalzen", 2; break;  
    case 4: callsub L_HandleStory, 13149, "Kavach Icarus", 30, "Lighthalzen", 3; break;  
    case 5: callsub L_HandleStory, 13151, "Errende Ebecee", 30, "Lighthalzen", 4; break;  
    case 6: callsub L_HandleStory, 13153, "Laurell Weinder", 30, "Lighthalzen", 5; break;  
    case 7: return;  
    }  
    return;  
  
L_DevilStories:  
    mes "<B>[ Ragi ]</B>";  
    mes "Do you know the story about Satan Morocc?";  
    next;  
      
    switch(select("Angel Incarnation:Dark Incarnation:Ghost Incarnation:Back")) {  
    case 1: callsub L_HandleStory, 13155, "Angel Incarnation", 30, "Morocc", 6; break;  
    case 2: callsub L_HandleStory, 13157, "Dark Incarnation", 30, "Morocc", 7; break;  
    case 3: callsub L_HandleStory, 13159, "Ghost Incarnation", 30, "Morocc", 8; break;  
    case 4: return;  
    }  
    return;  
  
L_DistantStories:  
    mes "<B>[ Ragi ]</B>";  
    mes "I never been to Ash Vacuum but I heard there are many interesting creatures:";  
    next;  
      
    switch(select("Uni-Horn Scaraba:Horn Scaraba:Antler Scaraba:Rake Horn Scaraba:Back")) {  
    case 1: callsub L_HandleStory, 13161, "Uni-Horn Scaraba", 30, "Ash Vacuum", 9; break;  
    case 2: callsub L_HandleStory, 13163, "Horn Scaraba", 30, "Ash Vacuum", 10; break;  
    case 3: callsub L_HandleStory, 13165, "Antler Scaraba", 30, "Ash Vacuum", 11; break;  
    case 4: callsub L_HandleStory, 13167, "Rake Horn Scaraba", 30, "Ash Vacuum", 12; break;  
    case 5: return;  
    }  
    return;

L_HandleStory:  
    .@quest_id = getarg(0);  
    .@monster_name$ = getarg(1);  
    .@count = getarg(2);  
    .@location$ = getarg(3);  
    .@index = getarg(4);  
      
    if (checkquest(.@quest_id, HUNTING) == 1) {  
        mes "<B>[ Ragi ]</B>";  
        mes "You're currently collecting the " + .@monster_name$ + " story in " + .@location$ + ".";  
        mes "Come back when you've gathered enough material for the tale.";  
        return;  
    }  
      
    if (checkquest(.@quest_id, HUNTING) == 2) {  
        mes "<B>[ Ragi ]</B>";  
        mes "Amazing! " + .@monster_name$ + " story completed!";  
        mes "Base Experience: "+ F_Insertcomma(.base_exp[.@index]) +".";  
        mes "Job Experience: "+ F_Insertcomma(.job_exp[.@index]) +".";  
        mes "Story Reward: "+ .item_amount[.@index] +"x "+ mesitemicon(.item_reward[.@index]) +" "+ getitemname(.item_reward[.@index]) +".";  
        next;  
          
        erasequest .@quest_id;  
        getexp .base_exp[.@index], .job_exp[.@index];  
        getitem .item_reward[.@index], .item_amount[.@index];  
        para_131lv02 += 1;  
        return;  
    }  
      
    mes "<B>[ Ragi ]</B>";  
    mes "I need you to gather the story of " + .@count + " " + .@monster_name$ + " in " + .@location$ + ".";  
    mes "These tales will make the most beautiful songs for Aigu.";  
    next;  
      
    if (select("Accept Story Collection:Decline") == 1) {  
        mes "<B>[ Ragi ]</B>";  
        mes "Wonderful! Begin collecting the " + .@monster_name$ + " story.";  
        setquest .@quest_id;  
    } else {  
        mes "<B>[ Ragi ]</B>";  
        mes "Come back when you're ready to help with the stories.";  
    }  
    return;  
  
L_SmallTalk:  
    mes "<B>[ Ragi ]</B>";  
    mes "What would you like to discuss?";  
    next;  
      
    switch(select("Hair Style:Song Request:About Aigu:About Love:Finish Conversation")) {  
    case 1: callsub L_HairStyle; break;  
    case 2: callsub L_SongRequest; break;  
    case 3: callsub L_AboutAigu; break;  
    case 4: callsub L_AboutLove; break;  
    case 5: return;  
    }  
    return;  
  
L_HairStyle:  
    mes "<B>[ Ragi ]</B>";  
    mes "There is a fine hair artist in Alberta. He butchered my hair with some cooking scissors. Looks illegal.";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "Sometimes, hair-dos or color are strange... but I was lucky I didn't die.";  
    return;  
  
L_SongRequest:  
    mes "<B>[ Ragi ]</B>";  
    mes "I did not make a song as a member of band yet. Someday, I will make a great song for you!";  
    return;  
  
L_AboutAigu:  
    mes "<B>[ Ragi ]</B>";  
    mes "I will never forget the first day I met her. She stared at me out of all the people in Izlude port. Now I help her by doing small errands.";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "But alas, I think Aigu likes someone else. ^FF0000We've never met... But I hate him.^000000";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "But I hate myself more because I want to stay around her even if she will never see me. Haha was I too serious?";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "I am just a storyteller.. Any story can be made up. Most of the times it contains the truth.";  
    return;  
  
L_AboutLove:  
    cutin "ragi03",0;  
    mes "<B>[ Ragi ]</B>";  
    mes "......";  
    next;  
    cutin "ragi02",0;  
    mes "<B>[ Ragi ]</B>";  
    mes "Aigu is only on my mind. I can not think of anything else. I am fine even if it is just a one-sided love...";  
    return;  
  
L_Information:  
    mes "<B>[ Ragi ]</B>";  
    mes "This modernized story collection system allows for efficient batch processing of multiple tales.";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "You can accept all available story collections at once, submit completed work in batches, and track your progress easily.";  
    next;  
    mes "<B>[ Ragi ]</B>";  
    mes "Much more efficient than the old individual story system. These tales will make beautiful songs!";  
    return;  
  
// Initialize reward arrays  
OnInit:  
    setunitdata(getnpcid(0), UNPC_GROUP_ID, 6);  
    setunittitle(getnpcid(0), "Ragi");  
	questinfo( QTYPE_QUEST, QMARK_YELLOW, "BaseLevel >= 131 && BaseLevel <= 140" );
    // Base experience rewards  
    setarray .base_exp[0], 1100000, 1100000, 1100000, 1100000, 1100000, 1100000, 1100000, 1100000, 1100000, 1100000, 1100000, 1100000, 1100000;  
      
    // Job experience rewards (different for story categories)  
    setarray .job_exp[0], 300000, 300000, 300000, 300000, 300000, 300000, 200000, 200000, 200000, 200000, 200000, 200000, 200000;  
      
    // Item rewards  
    setarray .item_reward[0], 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223;  
      
    // Item amounts  
    setarray .item_amount[0], 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9;  
    end;  
}