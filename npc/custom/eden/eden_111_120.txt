//===== rAthena Script =======================================
//= Eden Group Quests - Mission [111-120]
//===== By: ==================================================
//= Capuche, Updated by LTSteinhil
//===== Current Version: =====================================
//= 1.4
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= [Official Conversion]
//= Repeatable quests for players between BaseLevel 111 - 120.
//===== Additional Comments: =================================
//= 1.0 First version.
//= 1.1 Added support to Para_Team_Mark_ in Eden Group. [Ragno]
//= 1.2 Added use of F_HasEdenGroupMark function. [Ragno]
//= 1.3 Added quest management menu for accept/abandon all quests. [LTSteinhil]  
//= 1.4 Restructured to match array-based system. [LTSteinhil]  
//============================================================
  
moc_para01,17,95,5	script	Mission [111 - 120]#1	4_F_GENETIC,{ 
	mes " ";
	setdialogsize(400, 300);
	setdialogpospercent(50, 50); 
    mes "<B>[ Mingmin ]</B>";  
    if (!callfunc("F_HasEdenGroupMark")) {  
        cutin "min02",0;  
        mes "A stranger. This place is supposed to be for Eden Group Members only.";  
        mes "I'm in need base level ^FF0000111 - 120^000000 adventurers to help my research.";  
        close2;  
        cutin "",255;  
        end;  
    }  
      
    if (BaseLevel < 111) {  
        cutin "min02",0;  
        mes "I think I already told you that I am looking for an adventurer with more experience for my monster research.";  
        mes "It is because this mission has very dangerous requests.";  
        mes "I will reconsider if you turn to base level 111.";  
        close2;  
        cutin "",255;  
        end;  
    }   
      
    // Initialize relationship if first meeting  
    if (para_110lv01 == 0) {  
        callsub L_FirstMeeting;  
        close2;  
        cutin "",255;  
        end;  
    }  
      
    cutin "min01",0;  
	mes "Welcome " + strcharinfo(0) + " to the Eden Group Level 111-120 Quests!";
    mes "What research assistance do you need today?";  
    next;  
      
    switch(select("Quest Management:Individual Research:Small Talk:Information")) {  
    case 1: callsub L_QuestManagement; break;  
    case 2: callsub L_IndividualResearch; break;  
    case 3: callsub L_SmallTalk; break;  
    case 4: callsub L_Information; break;  
    }  
    close2;  
    cutin "",255;  
    end;  
  
L_FirstMeeting:  
    cutin "min02",0;  
    mes "......";  
    emotion ET_THINK;  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "(Wow...)";  
    next;  
    mes "The Geneticist is muttering to herself.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "Oh me? I am ^E51BD8Busaner Mingmin^000000 and I'm researching monsters by request of the Eden Group.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "I used to collect fungus and mold alone at my mountain lab. Since then, I joined a group looking for new monsters...";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "With all my experience, they actually made me a professor here at the Eden Group.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "I've modernized my research methods to be more efficient. Would you like to assist with my studies?";  
    para_110lv01 = 1;  
    return;  
  
L_QuestManagement:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Research Management Options:";  
    next;  
    switch(select("^0000FFAccept All Available Research^000000:^FF0000Abandon All Active Research^000000:Submit All Completed Research:Research Status:Back")) {  
    case 1: callsub L_AcceptAll; break;  
    case 2: callsub L_AbandonAll; break;  
    case 3: callsub L_SubmitAll; break;  
    case 4: callsub L_ResearchStatus; break;  
    case 5: return;  
    }  
    return;  
  
L_AcceptAll:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Accepting all available research projects for your level...";  
    next;  
      
    // Quest arrays for level 111-120 research  
    setarray .@quest_ids[0], 13067, 13069, 13071, 13073, 13075, 13077, 13081, 13083, 13085, 13087, 13089, 13093, 13095, 13097;  
    setarray .@cooldown_ids[0], 13068, 13070, 13072, 13074, 13076, 13078, 13082, 13084, 13086, 13088, 13090, 13094, 13096, 13098;  
      
    .@accepted = 0;  
    for (.@i = 0; .@i < getarraysize(.@quest_ids); .@i++) {  
        if (checkquest(.@cooldown_ids[.@i], PLAYTIME) == 0) continue; // On cooldown  
        if (checkquest(.@quest_ids[.@i]) > -1) continue; // Already have quest  
          
        setquest .@quest_ids[.@i];  
        .@accepted++;  
    }  
      
    mes "<B>[ Mingmin ]</B>";  
    mes "Accepted " + .@accepted + " new research projects!";  
    mes "Check your quest log for details on each study.";  
    return;  
  
L_AbandonAll:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Are you sure you want to abandon ALL active research?";  
    mes "^FF0000This will waste all the preparation work!^000000";  
    next;  
    if (select("Yes, abandon all:No, keep them") == 2) {  
        mes "<B>[ Mingmin ]</B>";  
        mes "Wise choice. Research takes dedication.";  
        return;  
    }  
      
    // Array of all possible research quest IDs  
    setarray .@all_quests[0], 13067, 13069, 13071, 13073, 13075, 13077, 13079, 13081, 13083, 13085, 13087, 13089, 13091, 13093, 13095, 13097, 13099;  
      
    .@abandoned = 0;  
    for (.@i = 0; .@i < getarraysize(.@all_quests); .@i++) {  
        if (checkquest(.@all_quests[.@i]) > -1) {  
            erasequest .@all_quests[.@i];  
            .@abandoned++;  
        }  
    }  
      
    mes "<B>[ Mingmin ]</B>";  
    mes "Abandoned " + .@abandoned + " research projects.";  
    mes "Such a waste of scientific potential...";  
    return;  
  
L_SubmitAll:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Checking for completed research...";  
    next;  
      
    // Research arrays matching reward indices  
    setarray .@hunt_quests[0], 13067, 13069, 13071, 13073, 13075, 13077, 13081, 13083, 13085, 13087, 13089, 13093, 13095, 13097;  
    setarray .@hunt_names$[0], "Raydric", "Khalitzburg", "Wanderer", "Ancient Mimic", "Deathword", "Owl Baron", "Dark Pinguicula", "Nepenthes", "Naga", "Centipede Larva", "Cornus", "Ancient Mummy", "Geffenia Survey", "Juperos Survey";  
      
    // Gathering quest arrays with proper indexing  
    setarray .@gather_quests[0], 13079, 13091, 13099;  
    setarray .@gather_names$[0], "Bloody Page Collection", "Mystic Horn Collection", "Fragment Collection";  
    setarray .@gather_items[0], 7449, 6023, 7094;  
    setarray .@gather_counts[0], 20, 20, 10;  
    setarray .@gather_items2[0], 0, 0, 7317;  // Second item for Fragment Collection  
    setarray .@gather_counts2[0], 0, 0, 20;   // Second item count  
    setarray .@gather_indices[0], 14, 15, 16; // Indices in reward arrays  
      
    .@submitted = 0;  
      
    // Check hunting research (existing code)  
    for (.@i = 0; .@i < getarraysize(.@hunt_quests); .@i++) {  
        if (checkquest(.@hunt_quests[.@i], HUNTING) == 2) {  
            mes "<B>[ Mingmin ]</B>";  
            mes "Excellent! " + .@hunt_names$[.@i] + " research completed.";  
            mes "Base Experience: "+ F_Insertcomma(.base_exp[.@i]) +".";  
            mes "Job Experience: "+ F_Insertcomma(.job_exp[.@i]) +".";  
            mes "Research Reward: "+ .item_amount[.@i] +"x "+ mesitemicon(.item_reward[.@i]) +" "+ getitemname(.item_reward[.@i]) +".";  
            next;  
              
            erasequest .@hunt_quests[.@i];    
            getexp .base_exp[.@i], .job_exp[.@i];  
            getitem .item_reward[.@i], .item_amount[.@i];  
            para_111lv02 += 1;  
            .@submitted++;  
            next;  
        }  
    }  
      
    // Check gathering research with array-based rewards  
    for (.@i = 0; .@i < getarraysize(.@gather_quests); .@i++) {  
        if (checkquest(.@gather_quests[.@i]) > -1) {  
            .@has_items = (countitem(.@gather_items[.@i]) >= .@gather_counts[.@i]);  
            if (.@gather_items2[.@i] > 0) {  
                .@has_items = (.@has_items && countitem(.@gather_items2[.@i]) >= .@gather_counts2[.@i]);  
            }  
              
            if (.@has_items) {  
                .@reward_index = .@gather_indices[.@i];  
                mes "<B>[ Mingmin ]</B>";  
                mes "Excellent! " + .@gather_names$[.@i] + " completed.";  
                mes "Base Experience: "+ F_Insertcomma(.base_exp[.@reward_index]) +".";  
                mes "Job Experience: "+ F_Insertcomma(.job_exp[.@reward_index]) +".";  
                mes "Research Reward: "+ .item_amount[.@reward_index] +"x "+ mesitemicon(.item_reward[.@reward_index]) +" "+ getitemname(.item_reward[.@reward_index]) +".";  
                next;  
                  
                delitem .@gather_items[.@i], .@gather_counts[.@i];  
                if (.@gather_items2[.@i] > 0) {  
                    delitem .@gather_items2[.@i], .@gather_counts2[.@i];  
                }  
                  
                erasequest .@gather_quests[.@i];    
                getexp .base_exp[.@reward_index], .job_exp[.@reward_index];  
                getitem .item_reward[.@reward_index], .item_amount[.@reward_index];  
                para_111lv02 += 1;  
                .@submitted++;  
                next;  
            }  
        }  
    }  
      
    if (.@submitted == 0) {  
        mes "<B>[ Mingmin ]</B>";  
        mes "No completed research found. Keep working on your studies!";  
    } else {  
        mes "<B>[ Mingmin ]</B>";  
        mes "Submitted " + .@submitted + " completed research projects!";  
        mes "Your contributions to science are invaluable.";  
    }  
    return;  
  
L_ResearchStatus:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Current Research Status:";  
    mes " ";  
      
    setarray .@all_quests[0], 13067, 13069, 13071, 13073, 13075, 13077, 13079, 13081, 13083, 13085, 13087, 13089, 13091, 13093, 13095, 13097, 13099;  
    setarray .@quest_names$[0], "Raydric Study", "Khalitzburg Study", "Wanderer Study", "Ancient Mimic Study", "Deathword Study", "Owl Baron Study", "Bloody Page Collection", "Dark Pinguicula Study", "Nepenthes Study", "Naga Study", "Centipede Larva Study", "Cornus Study", "Mystic Horn Collection", "Ancient Mummy Study", "Geffenia Survey", "Juperos Survey", "Fragment Collection";  
      
    .@active = 0;  
    for (.@i = 0; .@i < getarraysize(.@all_quests); .@i++) {  
        .@status = checkquest(.@all_quests[.@i], HUNTING);  
        if (.@status == -1) .@status = checkquest(.@all_quests[.@i]); // Check non-hunting quests  
          
        if (.@status > -1) {  
            if (.@status == 2)  
                mes "^00FF00" + .@quest_names$[.@i] + "^000000 - ^00FF00READY FOR SUBMISSION^000000";  
            else  
                mes "^000000" + .@quest_names$[.@i] + "^000000 - ^0000FFIN PROGRESS^000000";  
            .@active++;  
        }  
    }  
      
    if (.@active == 0) {  
        mes "^FF0000No active research projects.^000000";  
    }  
      
    mes " ";  
    mes "Total completed research: " + para_111lv02;  
    return;  
  
L_IndividualResearch:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Choose a research category:";  
    next;  
      
    switch(select("Glastheim Studies:Thanatos Tower Studies:Ash Vacuum Studies:Personal Research:Back")) {  
    case 1: callsub L_GlastheimResearch; break;  
    case 2: callsub L_ThanatosResearch; break;  
    case 3: callsub L_AshVacuumResearch; break;  
    case 4: callsub L_PersonalResearch; break;  
    case 5: return;  
    }  
    return;  
  
L_GlastheimResearch:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Glastheim monster research projects:";  
    next;  
      
    switch(select("Raydric Research:Khalitzburg Research:Wanderer Research:Back")) {  
    case 1: callsub L_HandleResearch, 13067, 13068, "Raydric", 30, "Glastheim", 0; break;  
    case 2: callsub L_HandleResearch, 13069, 13070, "Khalitzburg", 30, "Glastheim", 1; break;  
    case 3: callsub L_HandleResearch, 13071, 13072, "Wanderer", 30, "Glastheim", 2; break;  
    case 4: return;  
    }  
    return;

L_ThanatosResearch:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Thanatos Tower monster research projects:";  
    next;  
      
    switch(select("Ancient Mimic Research:Deathword Research:Owl Baron Research:Bloody Page Collection:Back")) {  
    case 1: callsub L_HandleResearch, 13073, 13074, "Ancient Mimic", 30, "Thanatos Tower", 3; break;  
    case 2: callsub L_HandleResearch, 13075, 13076, "Deathword", 30, "Thanatos Tower", 4; break;  
    case 3: callsub L_HandleResearch, 13077, 13078, "Owl Baron", 20, "Thanatos Tower", 5; break;  
    case 4: callsub L_HandleGathering, 13079, 13080, "Bloody Page", 7449, 20, "Thanatos Tower", 0, 0, 14; break;
    case 5: return;  
    }  
    return;  
  
L_AshVacuumResearch:  
    mes "<B>[ Mingmin ]</B>";  
    mes "Ash Vacuum area research projects:";  
    next;  
      
    switch(select("Dark Pinguicula Research:Nepenthes Research:Naga Research:Centipede Larva Research:Cornus Research:Mystic Horn Collection:Back")) {  
    case 1: callsub L_HandleResearch, 13081, 13082, "Dark Pinguicula", 30, "Ash Vacuum", 6; break;  
    case 2: callsub L_HandleResearch, 13083, 13084, "Nepenthes", 30, "Ash Vacuum", 7; break;  
    case 3: callsub L_HandleResearch, 13085, 13086, "Naga", 30, "Ash Vacuum", 8; break;  
    case 4: callsub L_HandleResearch, 13087, 13088, "Centipede Larva", 20, "Ash Vacuum", 9; break;  
    case 5: callsub L_HandleResearch, 13089, 13090, "Cornus", 30, "Ash Vacuum", 10; break;  
    case 6: callsub L_HandleGathering, 13091, 13092, "Mystic Horn", 6023, 20, "Ash Vacuum", 0, 0, 15; break;
    case 7: return;  
    }  
    return;  
  
L_PersonalResearch:  
    mes "<B>[ Mingmin ]</B>";  
    mes "My personal research projects:";  
    next;  
      
    switch(select("Ancient Mummy Research:Geffenia Survey:Juperos Survey:Fragment Collection:Back")) {  
    case 1: callsub L_HandleResearch, 13093, 13094, "Ancient Mummy", 30, "Personal", 11; break;  
    case 2: callsub L_HandleResearch, 13095, 13096, "Geffenia Survey", 10, "Personal", 12; break;  
    case 3: callsub L_HandleResearch, 13097, 13098, "Juperos Survey", 90, "Personal", 13; break;  
     case 4: callsub L_HandleGathering, 13099, 13100, "Fragment Collection", 7094, 10, "Personal", 7317, 20, 16; break;
    case 5: return;  
    }  
    return;  
  
L_HandleResearch:  
    .@quest_id = getarg(0);  
    .@cooldown_id = getarg(1);  
    .@monster_name$ = getarg(2);  
    .@count = getarg(3);  
    .@location$ = getarg(4);  
    .@index = getarg(5);  
      
    if (checkquest(.@cooldown_id, PLAYTIME) == 0) {  
        mes "<B>[ Mingmin ]</B>";  
        mes .@monster_name$ + "'s research is ongoing. Please come back later!";  
        return;  
    }  
      
    if (checkquest(.@quest_id, HUNTING) == 1) {  
        mes "<B>[ Mingmin ]</B>";  
        mes "You're currently researching " + .@monster_name$ + " in " + .@location$ + ".";  
        mes "Come back when you've completed the hunting requirements.";  
        return;  
    }  
      
    if (checkquest(.@quest_id, HUNTING) == 2) {  
        mes "<B>[ Mingmin ]</B>";  
        mes "Excellent! " + .@monster_name$ + " research completed.";  
        mes "Base Experience: "+ F_Insertcomma(.base_exp[.@index]) +".";  
        mes "Job Experience: "+ F_Insertcomma(.job_exp[.@index]) +".";  
        mes "Research Reward: "+ .item_amount[.@index] +"x "+ mesitemicon(.item_reward[.@index]) +" "+ getitemname(.item_reward[.@index]) +".";  
        next;  
          
        erasequest .@quest_id;  
        getexp .base_exp[.@index], .job_exp[.@index];  
        getitem .item_reward[.@index], .item_amount[.@index];  
        para_111lv02 += 1;  
        return;  
    }  
      
    mes "<B>[ Mingmin ]</B>";  
    mes "I need you to research " + .@monster_name$ + " in " + .@location$ + ".";  
    mes "Hunt " + .@count + " of them and report back with your findings.";  
    next;  
      
    if (select("Accept Research:Decline") == 1) {  
        mes "<B>[ Mingmin ]</B>";  
        mes "Excellent! Begin your research on " + .@monster_name$ + ".";  
        setquest .@quest_id;  
    } else {  
        mes "<B>[ Mingmin ]</B>";  
        mes "Come back when you're ready to contribute to science.";  
    }  
    return;  
  
L_HandleGathering:  
    .@quest_id = getarg(0);  
    .@cooldown_id = getarg(1);  
    .@item_name$ = getarg(2);  
    .@item_id = getarg(3);  
    .@count = getarg(4);  
    .@location$ = getarg(5);  
    .@item_id2 = getarg(6, 0);  
    .@count2 = getarg(7, 0);  
    .@reward_index = getarg(8); // Add reward index parameter  
      
    if (checkquest(.@cooldown_id, PLAYTIME) == 0) {  
        mes "<B>[ Mingmin ]</B>";  
        mes .@item_name$ + " research is ongoing. Please come back later!";  
        return;  
    }  
      
    if (checkquest(.@quest_id) > -1) {  
        if (.@item_id2 > 0) {  
            if (countitem(.@item_id) >= .@count && countitem(.@item_id2) >= .@count2) {  
                mes "<B>[ Mingmin ]</B>";  
                mes "Perfect! You've collected both " + getitemname(.@item_id) + " and " + getitemname(.@item_id2) + ".";  
                mes "Base Experience: "+ F_Insertcomma(.base_exp[.@reward_index]) +".";  
                mes "Job Experience: "+ F_Insertcomma(.job_exp[.@reward_index]) +".";  
                mes "Research Reward: "+ .item_amount[.@reward_index] +"x "+ mesitemicon(.item_reward[.@reward_index]) +" "+ getitemname(.item_reward[.@reward_index]) +".";  
                next;  
                  
                delitem .@item_id, .@count;  
                delitem .@item_id2, .@count2;  
                erasequest .@quest_id;  
                getexp .base_exp[.@reward_index], .job_exp[.@reward_index];  
                getitem .item_reward[.@reward_index], .item_amount[.@reward_index];  
                para_111lv02 += 1;  
                return;  
            } else {  
                mes "<B>[ Mingmin ]</B>";  
                mes "I need " + .@count + " " + getitemname(.@item_id) + " and " + .@count2 + " " + getitemname(.@item_id2) + ".";  
                return;  
            }  
        } else {  
            if (countitem(.@item_id) >= .@count) {  
                mes "<B>[ Mingmin ]</B>";  
                mes "Excellent! These " + getitemname(.@item_id) + " will advance my research.";  
                mes "Base Experience: "+ F_Insertcomma(.base_exp[.@reward_index]) +".";  
                mes "Job Experience: "+ F_Insertcomma(.job_exp[.@reward_index]) +".";  
                mes "Research Reward: "+ .item_amount[.@reward_index] +"x "+ mesitemicon(.item_reward[.@reward_index]) +" "+ getitemname(.item_reward[.@reward_index]) +".";  
                next;  
                  
                delitem .@item_id, .@count;  
                erasequest .@quest_id;  
                getexp .base_exp[.@reward_index], .job_exp[.@reward_index];  
                getitem .item_reward[.@reward_index], .item_amount[.@reward_index];  
                para_111lv02 += 1;  
                return;  
            } else {  
                mes "<B>[ Mingmin ]</B>";  
                mes "I need " + .@count + " " + getitemname(.@item_id) + " for this research.";  
                return;  
            }  
        }  
    }  
      
    mes "<B>[ Mingmin ]</B>";  
    if (.@item_id2 > 0) {  
        mes "I need you to collect " + .@count + " " + getitemname(.@item_id) + " and " + .@count2 + " " + getitemname(.@item_id2) + ".";  
    } else {  
        mes "I need you to collect " + .@count + " " + getitemname(.@item_id) + " from " + .@location$ + ".";  
    }  
    next;  
      
    if (select("Accept Collection:Decline") == 1) {  
        mes "<B>[ Mingmin ]</B>";  
        mes "Excellent! Begin collecting the materials I need.";  
        setquest .@quest_id;  
    } else {  
        mes "<B>[ Mingmin ]</B>";  
        mes "Come back when you're ready to help.";  
    }  
    return;  
  
L_SmallTalk:  
    mes "<B>[ Mingmin ]</B>";  
    mes "What would you like to discuss?";  
    next;  
      
    switch(select("Friends Story:Research Topics:Orange Mushroom Joke:Finish Conversation")) {  
    case 1: callsub L_FriendsStory; break;  
    case 2: callsub L_ResearchTopics; break;  
    case 3: callsub L_MushroomJoke; break;  
    case 4: return;  
    }  
    return;  
  
L_FriendsStory:  
    cutin "min03",0;  
    mes "<B>[ Mingmin ]</B>";  
    mes "I found a familiar face since I arrived to Eden Group with this request. Do you see the guy ^FF0000Rohtert^000000 with white hair near the entrance?";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "Now that he's grown up... well he used to follow me calling me his sister. By the way where is the blue hat guy who used to stick to him like glue. Did they have a fight?";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "That blue hat guy... He used to annoy me even at the club. If I see him again I just might smack him...";  
    return;  
  
L_ResearchTopics:  
    cutin "min03",0;  
    mes "<B>[ Mingmin ]</B>";  
    mes "Researching these magic items there is more to it than just having them in your possession.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "My plan so far is like this. Extracted magic from the Mystic Horn is compressed by the Fragments and Screws. Then I will input the ancient information which was written in the Bloody Pages.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "I'm hoping to create some type of small hand-held storage device.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "I will be rich if I complete this research! I am sure.";  
    return;  
  
L_MushroomJoke:  
    cutin "min02",0;  
    mes "<B>[ Mingmin ]</B>";  
    mes "... orange shiitake gluey mushroom?";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "Let me see. It might be dangerous.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "You helped me to research so let me help you! I will get rid of your mushroom spore infection.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "......";  
    next;  
    cutin "min03",0;  
    mes "<B>[ Mingmin ]</B>";  
    mes "...hee hee...";  
    emotion ET_SMILE;  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "Hmmph, You are so naive. Did you believe it? Sticky.. some kind of mushroom is growing in your body? Hahaha";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "It was just a joke. A little joke between friends.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "I am sorry if you are upset. You made it too easy...";  
    next;  
    emotion ET_SMILE;  
    mes "<B>[ Mingmin ]</B>";  
    mes "You are funnier than I thought. Do not worry. That mushroom does not exist.";  
    return;  
  
L_Information:  
    mes "<B>[ Mingmin ]</B>";  
    mes "This modernized research system allows for efficient batch processing of multiple studies.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "You can accept all available research at once, submit completed work in batches, and track your progress easily.";  
    next;  
    mes "<B>[ Mingmin ]</B>";  
    mes "Much more efficient than the old individual quest system, wouldn't you agree?";  
    return;  
  
// Initialize reward arrays  
OnInit:
    setunitdata( getnpcid(0), UNPC_GROUP_ID, 6);  
    setunittitle( getnpcid(0), "Mingmin" );  
	questinfo( QTYPE_QUEST, QMARK_YELLOW, "BaseLevel >= 111 && BaseLevel <= 120" );
    // Base experience rewards (0-13: hunting, 14-16: gathering)  
    setarray .base_exp[0], 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000, 700000;  
      
    // Job experience rewards    
    setarray .job_exp[0], 200000, 200000, 200000, 300000, 300000, 300000, 180000, 180000, 180000, 180000, 180000, 200000, 200000, 300000, 300000, 180000, 200000;  
      
    // Item rewards  
    setarray .item_reward[0], 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223, 25223;  
      
    // Item amounts  
    setarray .item_amount[0], 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7;  
    end;  
}
